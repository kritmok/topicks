{"ast":null,"code":"var _jsxFileName = \"/Users/krit/Desktop/RareElements_data_set/frontend/src/components/StockBarChart.js\";\nimport React from \"react\";\nimport \"./StockBarChart.css\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  x: 100,\n  y: 200,\n  z: 200\n}, {\n  x: 120,\n  y: 100,\n  z: 260\n}, {\n  x: 170,\n  y: 300,\n  z: 400\n}, {\n  x: 140,\n  y: 250,\n  z: 280\n}, {\n  x: 150,\n  y: 400,\n  z: 500\n}, {\n  x: 110,\n  y: 280,\n  z: 200\n}];\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"red\", \"pink\"];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScatterChart, {\n      width: 400,\n      height: 400,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"number\",\n        dataKey: \"x\",\n        name: \"stature\",\n        unit: \"cm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        type: \"number\",\n        dataKey: \"y\",\n        name: \"weight\",\n        unit: \"kg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          strokeDasharray: \"3 3\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n        name: \"A school\",\n        data: data,\n        fill: \"#8884d8\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/krit/Desktop/RareElements_data_set/frontend/src/components/StockBarChart.js"],"names":["React","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Cell","data","x","y","z","COLORS","App","top","right","bottom","left","strokeDasharray","map","entry","index","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SACEC,YADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,IAPF,QAQO,UARP;;AAUA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,GAAb;AAAkBC,EAAAA,CAAC,EAAE;AAArB,CADW,EAEX;AAAEF,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,GAAb;AAAkBC,EAAAA,CAAC,EAAE;AAArB,CAFW,EAGX;AAAEF,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,GAAb;AAAkBC,EAAAA,CAAC,EAAE;AAArB,CAHW,EAIX;AAAEF,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,GAAb;AAAkBC,EAAAA,CAAC,EAAE;AAArB,CAJW,EAKX;AAAEF,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,GAAb;AAAkBC,EAAAA,CAAC,EAAE;AAArB,CALW,EAMX;AAAEF,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,GAAb;AAAkBC,EAAAA,CAAC,EAAE;AAArB,CANW,CAAb;AAQA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,KAA7C,EAAoD,MAApD,CAAf;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AACA,MAAA,KAAK,EAAE,GADP;AAEA,MAAA,MAAM,EAAE,GAFR;AAGA,MAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,EADC;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,MAAM,EAAE,EAHF;AAINC,QAAAA,IAAI,EAAE;AAJA,OAHR;AAAA,8BAUA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAVA,eAWA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,GAA7B;AAAiC,QAAA,IAAI,EAAC,SAAtC;AAAgD,QAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAXA,eAYA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,GAA7B;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cAZA,eAaA,QAAC,OAAD;AAAS,QAAA,MAAM,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB;AAAjB;AAAA;AAAA;AAAA;AAAA,cAbA,eAcA,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,UAAd;AAAyB,QAAA,IAAI,EAAEV,IAA/B;AAAqC,QAAA,IAAI,EAAC,SAA1C;AAAA,kBACGA,IAAI,CAACW,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACR,QAAC,IAAD;AAA4B,UAAA,IAAI,EAAET,MAAM,CAACS,KAAK,GAAGT,MAAM,CAACU,MAAhB;AAAxC,WAAY,QAAOD,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;KA3BuBR,G","sourcesContent":["import React from \"react\";\nimport \"./StockBarChart.css\"\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Cell\n} from \"recharts\";\n\nconst data = [\n  { x: 100, y: 200, z: 200 },\n  { x: 120, y: 100, z: 260 },\n  { x: 170, y: 300, z: 400 },\n  { x: 140, y: 250, z: 280 },\n  { x: 150, y: 400, z: 500 },\n  { x: 110, y: 280, z: 200 }\n];\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"red\", \"pink\"];\n\nexport default function App() {\n  return (\n    <div className=\"\">\n      <h1>Hi</h1>\n      <ScatterChart\n      width={400}\n      height={400}\n      margin={{\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      }}\n    >\n      <CartesianGrid />\n      <XAxis type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" />\n      <YAxis type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" />\n      <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n      <Scatter name=\"A school\" data={data} fill=\"#8884d8\">\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Scatter>\n    </ScatterChart>\n    </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}