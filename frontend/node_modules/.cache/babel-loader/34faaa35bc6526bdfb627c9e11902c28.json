{"ast":null,"code":"var _jsxFileName = \"/Users/krit/Desktop/RareElements_data_set/frontend/src/components/StockPieChart.js\";\nimport React, { PureComponent } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Cell, ResponsiveContainer } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = scaleOrdinal(schemeCategory10).range();\nconst data = [{\n  x: 100,\n  y: 200,\n  z: 200\n}, {\n  x: 120,\n  y: 100,\n  z: 260\n}, {\n  x: 170,\n  y: 300,\n  z: 400\n}, {\n  x: 140,\n  y: 250,\n  z: 280\n}, {\n  x: 150,\n  y: 400,\n  z: 500\n}, {\n  x: 110,\n  y: 280,\n  z: 200\n}];\nexport default class Example extends PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n        width: 400,\n        height: 400,\n        margin: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          type: \"number\",\n          dataKey: \"x\",\n          name: \"stature\",\n          unit: \"cm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"number\",\n          dataKey: \"y\",\n          name: \"weight\",\n          unit: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          cursor: {\n            strokeDasharray: '3 3'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n          name: \"A school\",\n          data: data,\n          fill: \"#8884d8\",\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: colors[index % colors.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nExample.demoUrl = 'https://codesandbox.io/s/scatter-chart-with-cells-2sk2o';","map":{"version":3,"sources":["/Users/krit/Desktop/RareElements_data_set/frontend/src/components/StockPieChart.js"],"names":["React","PureComponent","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Cell","ResponsiveContainer","scaleOrdinal","schemeCategory10","colors","range","data","x","y","z","Example","render","top","right","bottom","left","strokeDasharray","map","entry","index","length","demoUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Cell, ResponsiveContainer } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\n\nconst colors = scaleOrdinal(schemeCategory10).range();\n\nconst data = [\n  { x: 100, y: 200, z: 200 },\n  { x: 120, y: 100, z: 260 },\n  { x: 170, y: 300, z: 400 },\n  { x: 140, y: 250, z: 280 },\n  { x: 150, y: 400, z: 500 },\n  { x: 110, y: 280, z: 200 },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/scatter-chart-with-cells-2sk2o';\n\n  render() {\n    return (\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <CartesianGrid />\n          <XAxis type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" />\n          <YAxis type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" />\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n          <Scatter name=\"A school\" data={data} fill=\"#8884d8\">\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n            ))}\n          </Scatter>\n        </ScatterChart>\n      </ResponsiveContainer>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}