{"ast":null,"code":"var _jsxFileName = \"/Users/krit/Desktop/RareElements_data_set/frontend/src/components/FutuTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Button from \"@mui/material/Button\";\nimport \"./FutuTable.css\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { makeStyles } from \"@mui/styles\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableFooter from \"@mui/material/TableFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet data = require(\"./data/Futu_final_output.json\");\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\",\n    maxWidth: 950\n  }\n}));\n\nfunction FutuTable() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi this is supposed to be a table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              align: \"right\",\n              children: \"Number of posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              align: \"right\",\n              children: \"Total Engagement rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              align: \"right\",\n              children: \"Market Attitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              align: \"right\",\n              children: \"Overall Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.posts_sum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.total_engagement_rate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.market_attitude\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.overall_score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 15],\n            component: \"div\",\n            count: data.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FutuTable, \"7BftIzpgW+sEagrK3boEUppYm9s=\", false, function () {\n  return [useStyles];\n});\n\n_c = FutuTable;\nexport default FutuTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FutuTable\");","map":{"version":3,"sources":["/Users/krit/Desktop/RareElements_data_set/frontend/src/components/FutuTable.js"],"names":["React","useState","ReactDOM","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","makeStyles","TablePagination","TableFooter","data","require","useStyles","theme","tableContainer","borderRadius","margin","maxWidth","FutuTable","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","minWidth","tableHeaderCell","slice","map","row","border","name","posts_sum","total_engagement_rate","market_attitude","overall_score","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Button from \"@mui/material/Button\";\nimport \"./FutuTable.css\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { makeStyles } from \"@mui/styles\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableFooter from \"@mui/material/TableFooter\" ;\nlet data = require(\"./data/Futu_final_output.json\");\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\",\n    maxWidth: 950,\n  },\n}));\n\nfunction FutuTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <div className=\"table-container\">\n      <h1>Hi this is supposed to be a table</h1>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.tableHeaderCell}>Name</TableCell>\n              <TableCell className={classes.tableHeaderCell} align=\"right\">\n                Number of posts\n              </TableCell>\n              <TableCell className={classes.tableHeaderCell} align=\"right\">\n                Total Engagement rate\n              </TableCell>\n              <TableCell className={classes.tableHeaderCell} align=\"right\">\n                Market Attitude\n              </TableCell>\n              <TableCell className={classes.tableHeaderCell} align=\"right\">\n                Overall Score\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => (\n                <TableRow\n                  key={row.name}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.posts_sum}</TableCell>\n                  <TableCell align=\"right\">\n                    {row.total_engagement_rate}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.market_attitude}</TableCell>\n                  <TableCell align=\"right\">{row.overall_score}</TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n          <TableFooter>\n            <TablePagination\n              rowsPerPageOptions={[5,10,15]}\n              component=\"div\"\n              count={data.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default FutuTable;\n"]},"metadata":{},"sourceType":"module"}